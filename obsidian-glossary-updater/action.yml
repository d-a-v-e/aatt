name: "Auto-Index Obsidian Updater"
description: "A GitHub Action to automatically update Obsidian based on new files"
author: "d-a-v-e"
inputs:
  OPENAI_API_KEY:
    description: "OpenAI API key for generating content."
    required: true
  MY_GITHUB_TOKEN:
    description: "GitHub token for accessing the repository."
    required: true
outputs:
  success:
    description: "Indicates if the Index was successfully updated."
runs:
  using: "composite"
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12.3"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Extract PR Number and Commit SHA from the GitHub event context
    - name: Get PR Info
      id: pr_info
      run: |
        pr_num=$(jq -r ".pull_request.number" "$GITHUB_EVENT_PATH")
        commit_sha=$(jq -r ".pull_request.merge_commit_sha" "$GITHUB_EVENT_PATH")
        echo "pull_request_number=$pr_num" >> $GITHUB_ENV
        echo "commit_sha=$commit_sha" >> $GITHUB_ENV

    - name: Run Index Update Script
      env:
        OPENAI_API_KEY: ${{ inputs.OPENAI_API_KEY }}
        GITHUB_TOKEN: ${{ inputs.MY_GITHUB_TOKEN }}
        REPO_PATH: ${{ github.repository }}
        PR_NUMBER: ${{ env.pull_request_number }}
        COMMIT_SHA: ${{ env.commit_sha }}
      run: python main.py

    # Additional step to enable debugging, helps in troubleshooting
    - name: Enable Debug Logging
      run: |
        echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV

